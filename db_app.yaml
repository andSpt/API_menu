version: '3.9'

services:
  db_app:
    container_name: db_app
    image: postgres:16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ylab
    ports:
      - '6040:5432'
    networks:
      - api_network
    healthcheck:
      test: sh -c "pg_isready -U postgres -d ylab"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    networks:
      - api_network
    healthcheck:
      test: sh -c "redis-cli ping"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  app:
    build:
      context: .
    container_name: app
    environment:
      DB_URL: postgresql+asyncpg://postgres:postgres@db_app:5432/ylab
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: pyamqp://guest:guest@rabbitmq:5672//
    entrypoint: sh -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8040 --reload"
    ports:
      - "8040:8040"
    networks:
      - api_network
    depends_on:
      - db_app
      - redis

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-alpine
    restart: always
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
    networks:
      - api_network
    healthcheck:
      test: sh -c "rabbitmq-diagnostics -q ping"
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s
    depends_on:
      - db_app
      - redis
      - app

  celery:
    build:
      context: .
    container_name: celery
    environment:
      CELERY_BROKER_URL: pyamqp://guest@rabbitmq:5672//
    entrypoint: sh -c "celery -A celery_app.tasks worker --loglevel=INFO"
    networks:
      - api_network
    depends_on:
      - db_app
      - redis
      - app
      - rabbitmq

networks:
  api_network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  celery_data:  



